name: Deploy - Development

on:
  push:
    branches:
      - develop

jobs:
  deploy-to-development-server: 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to DEV Docker Hub
      run: echo "${{ secrets.DEV_DOCKER_READ_WRITE_TOKEN }}" | docker login -u "${{ secrets.DEV_DOCKER_USERNAME }}" --password-stdin
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Ensure ECR repository exists
      run: |
        aws ecr describe-repositories --repository-names renter-score-api-v2 || \
        aws ecr create-repository --repository-name renter-score-api-v2
    
    - name: Build Docker image and push to DEV Docker Hub
      run: |
        docker build -t renter-score-api-v2:latest .
        docker tag renter-score-api-v2:latest ${{ secrets.DEV_DOCKER_USERNAME }}/renter-score-api-v2:latest
        docker push ${{ secrets.DEV_DOCKER_USERNAME }}/renter-score-api-v2:latest
        docker tag renter-score-api-v2:latest ${{ steps.login-ecr.outputs.registry }}/renter-score-api-v2:latest
        docker push ${{ steps.login-ecr.outputs.registry }}/renter-score-api-v2:latest
      working-directory: RenterScoreAPIv2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
  
    - name: Install Ansible
      run: pip install ansible

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}

    - name: Run Ansible Playbook
      run: |
        ansible-playbook -i inventories/development/hosts.yml deploy-dev-droplet.yml \
        --extra-vars "connectionstring_default='${{ secrets.CONNECTIONSTRING_DEFAULT }}'"
      env:
          DEV_DROPLET_IP: ${{ secrets.DEV_DROPLET_IP }}
          DEV_DOCKER_USERNAME: ${{ secrets.DEV_DOCKER_USERNAME }}
      working-directory: Ansible      